name: CI/CD

# Отменяем «старые» запуски одноимённых workflow при новых пушах
concurrency:
  group: ci-cd-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    env:
      PG_USER: ${{secrets.PG_USER}}
      PG_PASSWORD: ${{secrets.PG_PASSWORD}}
      PG_DATABASE: ${{secrets.PG_DATABASE}}
      DATABASE_URL: jdbc:postgresql://localhost:5432/${{secrets.PG_DATABASE}}

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: $PG_USER
          POSTGRES_PASSWORD: $PG_PASSWORD
          POSTGRES_DB: $PG_DATABASE
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U $PG_USER"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*','**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Wait for Postgres
        run: |
          until pg_isready -h localhost -p 5432 -U "$PG_USER"; do
            echo "Waiting for Postgres..."
            sleep 2
          done

      - name: Run database migrations
        run: ./gradlew flywayMigrate

      - name: Build & Test
        run: ./gradlew clean build --no-daemon

      - name: Run static analysis (Detekt)
        run: ./gradlew detekt

      - name: Init CodeQL scan
        uses: github/codeql-action/init@v2
        with:
          languages: kotlin

      - name: Perform CodeQL analysis
        uses: github/codeql-action/analyze@v2

  docker-publish:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/mybudget-backend:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
      - name: Rotate Docker cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  deploy:
    needs: docker-publish
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: production
      url: https://your.production.url

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Prepare SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Add known host
        run: ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd ~/mybudget-deploy
            export TAG=${{ github.sha }}
            docker-compose pull backend
            docker-compose up -d --no-deps --build backend
            docker-compose exec backend ./gradlew flywayMigrate

      - name: Smoke test
        run: |
          sleep 10
          curl --fail https://test/health || exit 1
