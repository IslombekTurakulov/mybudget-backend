version: '3.9'

networks:
  backend:
    driver: overlay
    attachable: true
  public:
    driver: overlay
    attachable: true

volumes:
  letsencrypt:
  traefik_logs:

services:
  traefik:
    image: traefik:v2.11
    networks:
      - public
      - backend
    command:
      - "--providers.docker=true"
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.exposedByDefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.dashboard.address=:8081"
      - "--certificatesresolvers.leresolver.acme.email=${LETSENCRYPT_EMAIL}"
      - "--certificatesresolvers.leresolver.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.leresolver.acme.httpchallenge.entrypoint=web"
      - "--log.level=INFO"
      - "--accesslog=true"
      - "--accesslog.filepath=/var/log/traefik/access.log"
      - "--metrics.prometheus=true"
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--providers.docker.network=public"
      - "--providers.docker.watch=true"
      - "--providers.docker.swarmModeRefreshSeconds=15s"
    ports:
      - "80:80"
      - "443:443"
      - "8081:8081"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - letsencrypt:/letsencrypt
      - traefik_logs:/var/log/traefik
    healthcheck:
      test: ["CMD", "traefik", "healthcheck"]
      interval: 30s
      timeout: 5s
      retries: 3
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
      rollback_config:
        parallelism: 1
        delay: 10s
        order: start-first
    logging:
      driver: json-file
      options:
        max-size: "5m"
        max-file: "5" 