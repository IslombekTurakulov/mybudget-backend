version: '3.8'

networks:
  backend_backend:
    name: backend_backend
    external: true
    driver: overlay
    driver_opts:
      com.docker.network.driver.mtu: "1400"
  backend_public:
    name: backend_public
    external: true
    driver: overlay
    driver_opts:
      com.docker.network.driver.mtu: "1400"

volumes:
  prometheus_data:
    name: backend_prometheus_data
  grafana_data:
    name: backend_grafana_data

services:
  prometheus:
    image: prom/prometheus:v2.45.0
    networks:
      backend_backend:
        ipv4_address: 10.0.1.10
      backend_public:
        ipv4_address: 10.0.2.10
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - target: 9090
        published: 9090
        protocol: tcp
        mode: host
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=backend_backend"
        - "traefik.http.routers.prometheus.rule=Host(`51.250.65.154`) && PathPrefix(`/prometheus`)"
        - "traefik.http.routers.prometheus.entrypoints=web"
        - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        max_attempts: 3
        window: 120s
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
      rollback_config:
        parallelism: 1
        delay: 10s
        order: start-first
    logging:
      driver: json-file
      options:
        max-size: "100m"
        max-file: "5"

  grafana:
    image: grafana/grafana:10.2.0
    networks:
      backend_backend:
        ipv4_address: 10.0.1.11
      backend_public:
        ipv4_address: 10.0.2.11
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel
    ports:
      - target: 3000
        published: 3000
        protocol: tcp
        mode: host
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=backend_backend"
        - "traefik.http.routers.grafana.rule=Host(`51.250.65.154`) && PathPrefix(`/grafana`)"
        - "traefik.http.routers.grafana.entrypoints=web"
        - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        max_attempts: 3
        window: 120s
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
      rollback_config:
        parallelism: 1
        delay: 10s
        order: start-first
    logging:
      driver: json-file
      options:
        max-size: "100m"
        max-file: "5" 